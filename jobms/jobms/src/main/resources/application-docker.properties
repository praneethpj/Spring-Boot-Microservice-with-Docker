job-service.url=http://JOBMS:8082
company-service.url=http://COMPANYMS:8081
review-service.url=http://REVIEWMS:8083

spring.application.name=jobms
server.port=8082

#spring.h2.console.enabled=true
#spring.datasource.url=jdbc:h2:mem:test
#spring.jpa.show-sql=true
##spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=create-drop

#postgreSQL
spring.datasource.url=jdbc:postgresql://postgres:5432/job
spring.datasource.username=embarkx
spring.datasource.password=embarkx
spring.jpa.database=POSTGRESQL
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

#Eureka
eureka.client.serviceUrl.defaultZone=http://service-registry:8791/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true


#zipkin
#This will catch each and every request 0.01 / 0.1 for production 1.0 = 100%
management.zipkin.tracing.endpoint=http://zipkin:9411/api/v2/spans
management.tracing.sampling.probability=1.0

#Config server
spring.config.import=optional:configserver:http://config-server:8080
#spring.profiles.active=prod


# Resilience4]
resilience4j.circuitbreaker.instances.companyBreaker.registerHealthIndicator=true
  #Calculate Presentage of failures : resilience4j.circuitbreaker.instances.companyBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.companyBreaker.slidingWindowSize=10
  #Calculate and decide the failure by calling this amount
resilience4j.circuitbreaker.instances.companyBreaker.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.companyBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.companyBreaker.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.companyBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.companyBreaker.register-health-indicator=true
resilience4j.circuitbreaker.instances.companyBreaker.automatic-transition-from-open-to-half-open-enabled=true
#Last N Called are recorded it used to calculate failure rate where N is size of the sliding window
resilience4j.circuitbreaker.instances.companyBreaker.sliding-window-type=count_based  

resilience4j.circuitbreaker.instances.companyBreaker.max-attempts=5
resilience4j.circuitbreaker.instances.companyBreaker.wait-duration=2s

resilience4j.ratelimiter.instances.companyBreaker.timeout-duration =0
resilience4j.ratelimiter.instances.companyBreaker.limit-refresh-period= 4
resilience4j.ratelimiter.instances.companyBreaker.limit-for-period=2

#Actuator
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true
